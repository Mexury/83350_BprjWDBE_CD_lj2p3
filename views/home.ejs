<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="/styles/css/main.css">
        <script src="js/components/AsyncSlot.js"></script>
        <title>Document</title>
    </head>
    <body>
        <div class="container">
            <%=session.token%>
        </div>
        <div class="container" style="display: flex; flex-direction: column; height: 100%; position: relative;">
            
            <form id="survey-form" data-questions="<%= JSON.stringify(session.questions) %>"
                style="display: grid; grid-template-columns: repeat(2, 1fr); width: 100%; gap: 80px; margin-top: 200px;">
                <div style="display: flex; flex-direction: column; gap: 24px;">
                    <div class="input-wrapper" style="display: flex; flex-direction: column; gap: 8px;">
                        <input type="text" name="question" placeholder="value">
                    </div>
                    <button type="submit" value="add-question">Add question</button>
                    <button type="submit" value="publish-survey">Publish survey</button>
                </div>

                <div id="question-list">
                    
                </div>
            </form>

            <div id="survey-table">
                <async-slot src="/surveys" id="async-surveys-table"></async-slot>
                <button id="update-surveys">Update</button>
                <button id="truncate-surveys">Truncate</button>
            </div>

        </div>
    </body>
</html>

<style>
    .question {
        border: 1px solid black;
        padding: 20px;
    }
</style>

<script defer>

let asyncSurveysTable = document.querySelector("#async-surveys-table")
let updateSurveysButton = document.querySelector("#update-surveys")
let truncateSurveysButton = document.querySelector("#truncate-surveys")

updateSurveysButton.onclick = e => asyncSurveysTable.update()
truncateSurveysButton.onclick = async e => {
    const response = await fetch(
        "/api/reset",
        {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }
    )
    const json = await response.json()

    if (json.success) {
        window.location.reload()
    }
}


let surveyForm = document.querySelector("form#survey-form")
let questionList = surveyForm.querySelector("#question-list")

let questions = JSON.parse(surveyForm.getAttribute("data-questions"))

const removeQuestionClicked = () => {
    updateQuestionList()
}

const updateQuestionList = () => {
    while (questionList.lastChild) {
        questionList.lastChild.remove()
    }
    questions.forEach(question => {
        let questionHTML = document.createElement("div")
        questionHTML.className = "question"
        questionHTML.innerHTML = `<small>${question.slug}</small><p>${question.value}</p>`
        questionHTML.onclick = async e => {
            const response = await fetch(
                "/api/remove-question",
                {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        slug: question.slug
                    })
                }
            )
            const json = await response.json()

            if (json.success) {
                questionHTML.remove()
            }
        }

        questionList.append(questionHTML)
    })
}
updateQuestionList()

const slugify = str => str.toLowerCase().trim().replace(/[^\w\s-]/g, '').replace(/[\s_-]+/g, '-').replace(/^-+|-+$/g, '')

surveyForm.onsubmit = async e => {
    e.preventDefault();

    let question = e.target.elements['question'].value.trim()
    let slug = slugify(question)

    if (e.submitter.value == "add-question") {
        if (slug.length > 0 && question.length > 0) {
            // correct
            questions.push({
                slug,
                value: question
            })

            console.log(e.submitter.value);

            const response = await fetch(
                "/api/add-question",
                {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        question: {
                            slug,
                            value: question
                        }
                    })
                }
            )
            console.log(await response.json())
        }
    } else
    if (e.submitter.value == "publish-survey") {
        const response = await fetch(
            "/api/publish",
            {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({})
            }
        )
        const json = await response.json()
    
        if (json.success) {
            window.location.replace(`/surveys/${json.data.token}`)
        }
    }
    

    // clear question list
    updateQuestionList()
}
</script>